{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/todoReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/todo/TodoForm.js","actions/todoActions.js","components/todo/TodoItem.js","components/todo/TodoList.js","components/todo/Todo.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","todos","todo","loading","combineReducers","auth","state","arguments","action","objectSpread","errors","concat","toConsumableArray","filter","_id","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","e","preventDefault","this","props","logoutUser","_this$props$auth","authLinks","react_default","a","createElement","className","Link","onClick","onLogoutClick","bind","to","name","guestLinks","data-toggle","data-target","id","Component","connect","dispatch","localStorage","removeItem","Footer","Landing","history","push","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","email","password","password2","onChange","assertThisInitialized","onSubmit","nextProps","setState","defineProperty","target","newUser","console","log","registerUser","classnames","is-invalid","placeholder","required","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","setItem","jwt_decode","TodoForm","text","newTodo","addTodo","todoData","TodoItem","deleteTodo","_this$props","onDeleteClick","delete","TodoList","map","todo_TodoItem","key","Todo","getTodos","todoContent","todo_TodoList","todo_TodoForm","get","jwtToken","App","es","BrowserRouter","layout_Navbar","Route","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","event"],"mappings":"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","file":"static/js/main.23d97188.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    //apply to every request\n\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    //Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\n//Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\n      \"https://damp-everglades-11634.herokuapp.com/api/users/register\",\n      userData\n    )\n    .then(res => history.push(\"/login\")) //action was not dispatched since only 1 statement is needed to be called here\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Login - Get user token\n\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\n      \"https://damp-everglades-11634.herokuapp.com/api/users/login\",\n      userData\n    )\n    .then(res => {\n      //Save to local storage\n      const { token } = res.data;\n      //Set token to local storage\n      localStorage.setItem(\"jwtToken\", token);\n      //Set token to auth Header\n      setAuthToken(token);\n      //Decode token to get user data\n      const decoded = jwt_decode(token);\n      //Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Set logged in User\n\nexport const setCurrentUser = decoded => {\n  return { type: SET_CURRENT_USER, payload: decoded };\n};\n\n//Log user out\nexport const logoutUser = () => dispatch => {\n  //Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  //Remove auth header for futur request\n  setAuthToken(false);\n  //Set current user into {} whihc will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const TODO_LOADING = \"TODO_LOADING\";\nexport const GET_TODOS = \"GET_TODOS\";\n\nexport const GET_TODO = \"GET_TODO\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\n  (typeof value === \"string\" && value.trim().length === 0);\n\nexport default isEmpty;\n","import { SET_CURRENT_USER } from \"../actions/types\";\nimport isEmpty from \"../validation/is-empty\";\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { ADD_TODO, GET_TODOS, DELETE_TODO } from \"../actions/types\";\n\nconst initialState = {\n  todos: [],\n  todo: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [...state.todos, action.payload]\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todos: action.payload\n      };\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo._id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","//root reducer\nimport { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\nimport todoReducer from \"./todoReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  todo: todoReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\"; //since we called out root reducer index.js\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n  onLogoutClick(e) {\n    e.preventDefault();\n    this.props.logoutUser();\n  }\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link\n            className=\"nav-link\"\n            onClick={this.onLogoutClick.bind(this)}\n            to=\"#\"\n          >\n            Logout {user.name}\n          </Link>\n        </li>\n      </ul>\n    );\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/register\">\n            Sign Up\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/todo\">\n            Todo App\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n            {isAuthenticated ? authLinks : guestLinks}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\n      Copyright &copy; 2019 Todo App\n    </footer>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    //if is authenticatd redirect to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/todo\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"dark-overlay landing-inner text-light\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Todo App</h1>\n                <p className=\"lead\">Help you keep a record of all the tasks</p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStatetoProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStatetoProps)(Landing);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/todo\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    console.log(newUser);\n\n    this.props.registerUser(newUser, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Todo App account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.name\n                    })}\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.onChange}\n                    required\n                  />\n                  {errors.name && (\n                    <div className=\"invalid-feedback\">{errors.name}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.email\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">{errors.email}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password2\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                    value={this.state.password2}\n                    onChange={this.onChange}\n                  />\n                  {errors.password2 && (\n                    <div className=\"invalid-feedback\">{errors.password2}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/todo\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/todo\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    console.log(user);\n    this.props.loginUser(user);\n  }\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <p className=\"lead text-center\">\n                Sign in to your Todo App account\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.email\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                  {errors.email && (\n                    <div className=\"invalid-feedback\">{errors.email}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStatetoProps,\n  { loginUser }\n)(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addTodo } from \"../../actions/todoActions\";\nimport { withRouter } from \"react-router-dom\";\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    this.setState({ errors: {} });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const { user } = this.props.auth;\n    const newTodo = {\n      text: this.state.text\n    };\n    console.log(newTodo);\n\n    this.props.addTodo(newTodo);\n    this.setState({ text: \"\" });\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"post-form mb-3\">\n        <div className=\"card card-info\">\n          <div className=\"card-header bg-info text-white\">\n            Tasks to be done...\n          </div>\n          <div className=\"card-body\">\n            <form onSubmit={this.onSubmit}>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className={classnames(\"form-control form-control-lg\", {\n                    \"is-invalid\": errors.text\n                  })}\n                  placeholder=\"Name\"\n                  name=\"text\"\n                  value={this.state.text}\n                  onChange={this.onChange}\n                  required\n                />\n                {errors.text && (\n                  <div className=\"invalid-feedback\">{errors.text}</div>\n                )}\n              </div>\n              <button type=\"submit\" className=\"btn btn-dark\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addTodo }\n)(withRouter(TodoForm));\n","import axios from \"axios\";\n\nimport { ADD_TODO, GET_ERRORS, GET_TODOS, DELETE_TODO } from \"./types\";\n\n//Add Todo\nexport const addTodo = todoData => dispatch => {\n  axios\n    .post(\"https://damp-everglades-11634.herokuapp.com/api/todos\", todoData)\n    .then(res => {\n      dispatch({\n        type: ADD_TODO,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n//GET  Todos\nexport const getTodos = () => dispatch => {\n  axios\n    .get(\"https://damp-everglades-11634.herokuapp.com/api/todos\")\n    .then(res => {\n      dispatch({\n        type: GET_TODOS,\n        payload: res.data\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\n//Delte Todo\nexport const deleteTodo = id => dispatch => {\n  axios\n    .delete(`https://damp-everglades-11634.herokuapp.com/api/todos/${id}`)\n    .then(res => {\n      dispatch({\n        type: DELETE_TODO,\n        payload: id\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { deleteTodo } from \"../../actions/todoActions\";\n\nclass TodoItem extends Component {\n  onDeleteClick(id) {\n    console.log(id);\n    this.props.deleteTodo(id);\n  }\n  render() {\n    const { todo, auth } = this.props;\n    return (\n      <div className=\"card card-body mb-3\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <p className=\"lead\">{todo.text}</p>\n\n            <button\n              onClick={this.onDeleteClick.bind(this, todo._id)}\n              type=\"button\"\n              className=\"btn btn-info mr-1\"\n            >\n              Done\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nTodoItem.propTypes = {\n  deleteTodo: PropTypes.func.isRequired,\n  todo: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStatetoProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStatetoProps,\n  { deleteTodo }\n)(TodoItem);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\nclass TodoList extends Component {\n  render() {\n    const { todos } = this.props;\n    return todos.map(todo => <TodoItem key={todo._id} todo={todo} />);\n  }\n}\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired\n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport TodoForm from \"./TodoForm\";\nimport TodoList from \"./TodoList\";\n\nimport { getTodos } from \"../../actions/todoActions\";\n\nclass Todo extends Component {\n  componentDidMount() {\n    //if is not authenticatd redirect to landing\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n\n    this.props.getTodos();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/\");\n    }\n  }\n  render() {\n    const { todos } = this.props.todo;\n    let todoContent;\n    if (todos === null) {\n      todoContent = <h1>No TODOS or Loading</h1>;\n    } else {\n      todoContent = <TodoList todos={todos} />;\n    }\n    return (\n      <div className=\"feed\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <TodoForm />\n            {todoContent}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodo.propTypes = {\n  getTodos: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  todo: PropTypes.object.isRequired\n};\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  todo: state.todo\n});\n\nexport default connect(\n  mapStatetoProps,\n  { getTodos }\n)(Todo);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Todo from \"./components/todo/Todo\";\n\nimport \"./App.css\";\n\n//check for token\n\nif (localStorage.jwtToken) {\n  //Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Set User nd isauthenticate\n  store.dispatch(setCurrentUser(decoded));\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container\">\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/todo\" component={Todo} />\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n\n    window.addEventListener(\"install\", event => {\n      console.log(`install`);\n    });\n\n    window.addEventListener(\"fetch\", event => {\n      console.log(`fetch`);\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log(\"Service Worker Registred\");\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n//npm run build && npm run start-sw\n"],"sourceRoot":""}